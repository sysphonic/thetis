
<%= render(:partial => 'common/plupload_init') %>

<table id="tree_main" style="width:100%; background-color:#8db7eb; border:solid 2px; border-top-color:lavender; border-left-color:lavender; border-bottom-color:dimgray; border-right-color:dimgray;"> 
  <tr>
    <td style="padding:2px 0px;">
      <table style="width:100%;">
        <tr>
          <td nowrap style="text-align:left; width:20%; padding:0px 10px; border-right:solid 1px gray;">
            <input type="button" value="<%= t('btn.get_mails') %>" onclick="getMails();" style="width:80px;" />
            <input type="button" value="<%= t('btn.create_mail') %>" onclick="doCreateMail();"  style="width:80px;" />
          <!--
            <input type="button" value="<%= t('btn.address_book') %>" onclick="showAddressBook();" style="width:80px;" />
          -->
          </td>
          <td nowrap style="text-align:left; width:60px; padding:0px 10px; border-right:solid 1px gray;">
            <nobr>
            <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/mail/addressbook_mini.png" title="<%= t('btn.address_book') %>" onclick="showAddressBook(); return false;" style="cursor:pointer;" />
            <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/mail/filter.png" title="<%= MailFilter.model_name.human %>" onclick="showFilters(); return false;" style="cursor:pointer;" />
            </nobr>
          </td>
          <td id="btnbox_handled" nowrap style="text-align:left; width:30%; padding:0px 10px; border-right:solid 1px gray;">
            <input type="button" value="<%= t('btn.reply') %>" onclick="doReplyMail(false);" style="width:80px;" />
            <input type="button" value="<%= t('btn.reply_to_all') %>" onclick="doReplyMail(true);" style="width:80px;" />
            <input type="button" value="<%= t('btn.forward') %>" onclick="doForwardMail();" style="width:80px;" /> 
            <input type="button" value="<%= t('btn.edit_new') %>" onclick="doEditMail('duplicate');" style="width:80px;" />
            <input type="button" value="<%= t('btn.save') %>" onclick="doDownloadMail();" style="width:80px;" />
          </td>
          <td id="btnbox_draft" nowrap style="display:none; text-align:left; width:10%; padding:0px 10px; border-right:solid 1px gray;">
            <input type="button" value="<%= t('btn.edit') %>" onclick="doEditMail('send');" style="width:80px;" />
          </td>
          <td nowrap style="text-align:left; padding:0px 10px;">
<!--
            <input type="button" value="<%= t('btn.move') %>" onclick="doMoveMail();" style="width:80px;" /> 
            <input type="button" value="<%= t('btn.delete') %>" onclick="doDeleteMail();" style="width:80px;" />
-->
          </td>
        </tr>
      </table>
    </td>
  </tr> 
  <tr>
    <td style="text-align:center;">

      <table style="width:100%; background-color:white;">
        <tr>
          <td id="td_tree" style="vertical-align:top;">
            <table style="width:100%; height:100%;">
              <tr>
                <td style="vertical-align:top; border:inset 2px silver; padding:0px;">
                  <%= form_tag( {:controller => 'mail_folders', :action => 'show_tree'}, :method => 'post', :name => 'form_folder_tree') %>
                    <div id="divMailTree" style="overflow:auto;"><div id="mailTree" style="text-align:left; margin:10px;"></div></div>
                  </form>
                </td>
              </tr>
              <tr style="height:22px">
                <td style="text-align:left; vertical-align:middle; background-color:#8db7eb;">
                  <div style="display:inline-block; padding-left:10px;">
                    <a href="javascript:this.onclick()" onclick="onMailAccountOptsClicked(this); return false;" onblur="onMailAccountOptsClicked(this, true);" style="color:white; font-weight:bold;">
                      <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/mail/account_close.png" />
                      <span class="toolbtn_label"><%= t('mail_account.btn.control') %> <%= raw('&raquo;') %></span>
                    </a>
                    <div class="toolbtn_dropdown" id="div_mail_account_opts" style="display:none; width:140px; margin:-60px 0px 0px 150px; z-index:1001;">
                      <div style="text-align:center; padding:0px;">
                        <a class="context_menu_item" href="javascript:this.onclick()" onclick="showAccountSetting(false); return false;">
                          <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/config.png">
                          <%= t('btn.config') %>
                        </a>
                        <a class="context_menu_item" href="javascript:this.onclick()" onclick="showAccountSetting(true); return false;">
                          <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/file_add.png">
                          <%= t('btn.add') %>
                        </a>
                      </div>
                    </div>
                  </div>
                </td>
              </tr>
              <tr style="height:22px">
                <td style="text-align:left; vertical-align:middle; background-color:#8db7eb;">
                  <div style="display:inline-block; padding-left:10px;">
                    <a href="javascript:this.onclick()" onclick="onMailFolderOptsClicked(this); return false;" onblur="onMailFolderOptsClicked(this, true);" style="color:white; font-weight:bold;">
                      <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/mail/tree_mail_open.png">
                      <span class="toolbtn_label"><%= t('mail_folder.btn.control') %> <%= raw('&raquo;') %></span>
                    </a>
                    <div class="toolbtn_dropdown" id="div_mail_folder_opts" style="display:none; width:140px; margin:-162px 0px 0px 150px; z-index:1001;">
                      <div style="text-align:center; padding:0px; border-bottom:solid 1px gray;">
                        <a class="context_menu_item" href="javascript:this.onclick()" onclick="onCreateFolderClicked(); return false;">
                          <%= t('btn.new') %>
                        </a>
                        <a class="context_menu_item" href="javascript:this.onclick()" onclick="onRenameFolderClicked(); return false;">
                          <%= t('btn.rename') %>
                        </a>
                        <a class="context_menu_item" href="javascript:this.onclick()" onclick="onMoveFolderClicked(); return false;">
                          <%= t('btn.move') %>
                        </a>
                        <a class="context_menu_item" href="javascript:this.onclick()" onclick="onDeleteFolderClicked(); return false;">
                          <%= t('btn.delete') %>
                        </a>
                      </div>
                      <div style="text-align:center; padding:0px; border-bottom:solid 1px gray;">
                        <a class="context_menu_item" href="javascript:this.onclick()" onclick="onEmptyFolderClicked(); return false;">
                          <%= t('btn.empty') %>
                        </a>
                      </div>
                      <div style="text-align:center; padding:0px;">
                        <a class="context_menu_item" href="javascript:this.onclick()" onclick="onOrderFoldersClicked(); return false;">
                          <%= t('btn.order') %>
                        </a>
                      </div>
                    </div>
                  </div>
                </td>
              </tr>
            </table>
          </td>

          <td id="drag_v_border" style="width:5px; vertical-align:middle; background-color:#8db7eb; cursor:w-resize;">
            <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/controls/grip_vertical.png">
          </td>

          <td id="td_view" style="vertical-align:top;">
            <table style="width:100%;">
              <tr>
                <td style="text-align:center; vertical-align:top; border:inset 2px silver;">
                  <div id="div_mails" style="width:100%; overflow:auto;">&nbsp;</div>
                </td>
              </tr>
              <tr style="height:5px">
                <td id="drag_h_border" style="text-align:center; vertical-align:middle; background-color:#8db7eb; cursor:s-resize; line-height:5px;">
                  <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/controls/grip_horizontal.png" style="vertical-align:top; height:5px;">
                </td>
              </tr>
              <tr>
                <td style="text-align:center; border:inset 2px silver;">
                  <div id="div_mail_content"></div>
                </td>
              </tr>
            </table>
          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>


<%
unless @folder_tree.nil?
  @folder_tree.each do |parent_id, child_folders|
    child_folders.each do |folder|
%>
  <span id="xtype_<%= folder.id %>" style="display:none;"><%= folder.xtype %></span>
<%
    end
  end
end
%>
  <span id="xtype_0" style="display:none;"></span>


<%= render(:partial => 'common/addressbook_func', :locals => {:from => 'mail_folders'}) %>
<%= render(:partial => 'send_mails/popup_func', :locals => {:mail_account_not_set => @mail_accounts.empty?, :ctrl_mails_list_update => true}) %>

<script type="text/javascript">

new Draggable("drag_v_border", {revert:false, constraint:"horizontal"});
new Draggable("drag_h_border", {revert:false, constraint:"vertical"});

var BorderDragObserver = Class.create();
BorderDragObserver.prototype = {
  initialize: function() {
  },
  onStart: function(eventName, draggable, event) {
  },
  onDrag: function(eventName, draggable, event) {
    if (draggable.element.id == "drag_v_border") {
      var divMailTree = _z("divMailTree");
      var td_tree = _z("td_tree");
      var td_view = _z("td_view");
      var div_mails = _z("div_mails");
      var div_mail_content = _z("div_mail_content");

      var orgWidthMailTree = divMailTree.offsetWidth;
      var orgWidthMails = div_mails.offsetWidth;

      draggable.options.snap = function(x, y) {
        return onVerticalBorderDragged(x, y, divMailTree, td_tree, td_view, div_mails, div_mail_content, orgWidthMailTree, orgWidthMails)
      };
    } else if (draggable.element.id == "drag_h_border") {
      var div_mails = _z("div_mails");
      var div_mail_content = _z("div_mail_content");
      var mail_body_view = _z("mail_body_view");

      var orgHeightMails = div_mails.offsetHeight;
      var orgHeightMailContent = div_mail_content.offsetHeight;

      draggable.options.snap = function(x, y) {
        return onHorizontalBorderDragged(x, y, div_mails, div_mail_content, mail_body_view, orgHeightMails, orgHeightMailContent);
      };
    }
  },
  onEnd: function(eventName, draggable, event) {
  }
}
Draggables.addObserver( new BorderDragObserver() );

function onVerticalBorderDragged(x, y, divMailTree, td_tree, td_view, div_mails, div_mail_content, orgWidthMailTree, orgWidthMails)
{
  var leftWidth = orgWidthMailTree + x;
  var rightWidth = orgWidthMails - x;
  if (leftWidth < 100 && x < 0) {
    return [100-orgWidthMailTree, y];
  } else if (rightWidth < 100 && x > 0) {
    return [orgWidthMails-100, y];
  }
  divMailTree.style.width = leftWidth + "px";
  td_tree.style.width = leftWidth + "px";

  div_mails.style.width = rightWidth + "px";
  div_mail_content.style.width = div_mails.style.width;
  td_view.style.width = rightWidth + "px";

  arrangeMailContentSection(div_mail_content);

  return [x, y];
}

function onHorizontalBorderDragged(x, y, div_mails, div_mail_content, mail_body_view, orgHeightMails, orgHeightMailContent)
{
  var upperHeight = orgHeightMails + y;
  var lowerHeight = orgHeightMailContent - y;
  if (upperHeight < 10 && y < 0) {
    return [x, 10-orgHeightMails];
  } else if (lowerHeight < 10 && y > 0) {
    return [x, orgHeightMailContent-10];
  }
  div_mails.style.height = upperHeight + "px";
  div_mail_content.style.height = lowerHeight + "px";
  if (mail_body_view) {
//    mail_body_view.style.height = (mail_body_view.offsetHeight - y) + "px";
  }

  arrangeMailContentSection(div_mail_content);

  return [x, y];
}

function arrangeMailContentSection(div_mail_content)
{
  var div_mail_body = _z("div_mail_body");
  if (!div_mail_body) {
    return;
  }
  var div_mail_attach = _z("div_mail_attach");
  var col_height = parseInt(div_mail_content.style.height, 10);
  if (div_mail_attach) {
    div_mail_body.style.height = (col_height / 4 * 3) + "px";
    div_mail_body.style.width = div_mail_content.clientWidth + "px";

    div_mail_attach.style.height = (col_height / 4 * 1) + "px";
    div_mail_attach.style.width = div_mail_body.style.width;
  } else {
    div_mail_body.style.height = col_height + "px";
    div_mail_body.style.width = div_mail_content.clientWidth + "px";
  }
}

<% if (params[:tip] == 'true') and !@mail_accounts.empty? %>
function showTips()
{
  tip("<%= t('mail.info_to_update') %>");
}
<% end %>

var folderAccountsHash = {};

function getMailAccountId(folder_id)
{
  return folderAccountsHash[folder_id];
}

function getCurrentFolderId()
{
  return (ThetisBox.getSelectedTreeNodeId("mailTree") || "<%= TreeElement::ROOT_ID %>");
}

function onLoadSub()
{
  <%
  figure = @login_user.get_figure
  mail_user_open = THETIS_RELATIVE_URL_ROOT + "/images/figures/#{figure}.png"
  mail_user_close = THETIS_RELATIVE_URL_ROOT + "/images/figures/#{figure}.png"
  %>
  var folderImgs = [
  <% icons = MailFolder.get_icons(nil) %>
    ["<%= icons[1] %>", "<%= icons[2] %>"],
  <% icons = MailFolder.get_icons(MailFolder::XTYPE_INBOX) %>
    ["<%= icons[1] %>", "<%= icons[2] %>"],
  <% icons = MailFolder.get_icons(MailFolder::XTYPE_SENT) %>
    ["<%= icons[1] %>", "<%= icons[2] %>"],
  <% icons = MailFolder.get_icons(MailFolder::XTYPE_DRAFTS) %>
    ["<%= icons[1] %>", "<%= icons[2] %>"],
  <% icons = MailFolder.get_icons(MailFolder::XTYPE_TRASH) %>
    ["<%= icons[1] %>", "<%= icons[2] %>"],
  <% icons = MailFolder.get_icons(MailFolder::XTYPE_ACCOUNT_ROOT) %>
    ["<%= icons[1] %>", "<%= icons[2] %>"],
    ["<%= mail_user_open %>", "<%= mail_user_close %>"]
  ];
  var array = [["0", " <%= @login_user.get_name %>", "", "selectFolder('0');", 6 /* img_idx */]];
  ThetisBox.buildTree("", array, "mailTree", folderImgs);
  <%
  folder_accounts_h = {}
  unless @folder_tree.nil?
    @folder_tree.each do |parent_id, child_folders|
  %>
  array = [
    <%
    count = 0
    child_folders.each do |folder|

      case folder.xtype
        when MailFolder::XTYPE_INBOX
          img_idx = 1
        when MailFolder::XTYPE_SENT
          img_idx = 2
        when MailFolder::XTYPE_DRAFTS
          img_idx = 3
        when MailFolder::XTYPE_TRASH
          img_idx = 4
        when MailFolder::XTYPE_ACCOUNT_ROOT
          img_idx = 5
        else
          img_idx = 0
      end

      if (folder.xtype == MailFolder::XTYPE_ACCOUNT_ROOT)
        folder_accounts_h[folder.id] = folder.mail_account_id
      else
        folder_accounts_h[folder.id] = folder_accounts_h[parent_id.to_i]
      end

      folder_name = folder.name
      if (folder_name.nil? or folder_name.empty?) \
          and (folder.xtype == MailFolder::XTYPE_ACCOUNT_ROOT)
        folder_name = MailAccount.get_title(folder.mail_account_id)
      end
    %>
    ["<%= folder.id %>", " <%= folder_name %>", "", "selectFolder('<%= folder.id %>');", <%= img_idx %>]
    <%
      count += 1
      if (count < child_folders.length)
    %>
    ,
    <%
      end
    end
    %>
  ];
  ThetisBox.buildTree("<%= parent_id %>", array, "mailTree", folderImgs, false);
  <%
    end
  end
  %>

  <%
  folder_accounts_h.each do |folder_id, mail_account_id|
    next if mail_account_id.nil?
  %>
  folderAccountsHash["<%= folder_id %>"] = <%= mail_account_id %>;
  <%
  end
  %>

<% unless session[:mailfolder_id].nil? or session[:mailfolder_id].empty? %>
  doSelectTree(<%= session[:mailfolder_id] %>);
<% end %>

<% if @mail_accounts.empty? %>
  showAccountSetting(true);
<% end %>
}

function doUpdatePage()
{
  var addParams = [];
<% unless params[:mail_account_xtype].nil? %>
  addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
<% end %>

  prog("TOP-RIGHT");
  location.href = "<%= url_for(:controller => 'mail_folders', :action => 'show_tree') %>?"+addParams.join("&");
}

function getMails()
{
<% if @mail_accounts.empty? %>
  msg("<%= t('msg.configure_mail_account') %>");
<% else %>
  var folder_id = getCurrentFolderId();
  doUpdateMails(folder_id, true);
<% end %>
}

function checkName(val)
{
  var val = trim(val, false);

  if (val.charAt(0) == '$') {
    msg("<%= t('folder.reserved_name') %>");
    return false;
  }
  if (val.indexOf('/') >= 0) {
    msg("<%= t('folder.reserved_char') %>");
    return false;
  }
  return true;
}

function doCreateFolder(thetisBoxId, folder_id)
{
  var thetisBoxEdit = _z("thetisBoxEdit-"+thetisBoxId);
  if (thetisBoxEdit && thetisBoxEdit.value) {
    var val = thetisBoxEdit.value;
    ThetisBox.remove(thetisBoxId);

    if (!checkName(val)) {
      return false;
    }

    var addParams = [];
  <% unless params[:mail_account_xtype].nil? %>
    addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
  <% end %>
    var mail_account_id = getMailAccountId(folder_id);
    if (mail_account_id) {
      addParams.push("mail_account_id="+mail_account_id);
    }
    addParams.push("selectedFolderId="+folder_id);
    addParams.push("thetisBoxEdit="+encodeURIComponent(val));
    addParams.push("authenticity_token=<%= form_authenticity_token %>");

    var thetisBoxProgress = prog("TOP-RIGHT");

    new Ajax.Updater(
        "mailTree:"+folder_id,
        "<%= url_for(:controller => 'mail_folders', :action => 'create') %>",
        {
          method:"post",
          parameters:addParams.join("&"),
          evalScripts:true,
          insertion:Insertion.Bottom,
          onComplete:function(request) {
            thetisBoxProgress.remove();
          }
        }
      );
  }
}

function onCreateFolderClicked()
{
  var folder_id = ThetisBox.getSelectedTreeNodeId("mailTree");
  if (!folder_id) {
    msg("<%= t('folder.select_parent') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('mail_folder.root_cannot_have_folders') %>");
    return;
  }

  ThetisBox.openTree("mailTree", folder_id, true);

  var thetisBox = new ThetisBox;
  thetisBox.show("CENTER", "", "INPUT", "doCreateFolder("+thetisBox.id+", '"+folder_id+"')", "<%= t('folder.specify_name') %>", "");
}

function doRenameFolder(thetisBoxId, folder_id)
{
  var thetisBoxEdit = _z("thetisBoxEdit-"+thetisBoxId);
  if (thetisBoxEdit && thetisBoxEdit.value) {
    var val = thetisBoxEdit.value;
    ThetisBox.remove(thetisBoxId);

    if (!checkName(val)) {
      return false;
    }

    var addParams = [];
    addParams.push("id="+folder_id);
    addParams.push("thetisBoxEdit="+encodeURIComponent(val));
  <% unless params[:mail_account_xtype].nil? %>
    addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
  <% end %>
    addParams.push("authenticity_token=<%= form_authenticity_token %>");

    var thetisBoxProgress = prog("TOP-RIGHT");

    new Ajax.Updater(
        "a_mailTree:"+folder_id,
        "<%= url_for(:controller => 'mail_folders', :action => 'rename') %>",
        {
          method:"post",
          parameters:addParams.join("&"),
          evalScripts:true,
          onComplete:function(request) {
            thetisBoxProgress.remove();
          }
        }
      );
  }
}

function onRenameFolderClicked()
{
  var folder_id = ThetisBox.getSelectedTreeNodeId("mailTree");
  if (!folder_id) {
    msg("<%= t('folder.select') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('folder.root_folder_restricted') %>");
    return;
  }
  var xtype = _z("xtype_"+folder_id).innerHTML;
  if (xtype != "") {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }

  ThetisBox.openTree("mailTree", folder_id, true);

  var thetisBox = new ThetisBox;
  var name = trim(restoreHTML(_z("mailTree:"+folder_id+"_name").innerHTML));
  thetisBox.show("CENTER", "", "INPUT", "doRenameFolder("+thetisBox.id+", '"+folder_id+"')", "<%= t('folder.specify_name') %>", name);
}

function onDeleteFolderClicked()
{
  var folder_id = ThetisBox.getSelectedTreeNodeId("mailTree");
  if (!folder_id) {
    msg("<%= t('folder.select') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('folder.root_folder_restricted') %>");
    return;
  }
  var xtype = _z("xtype_"+folder_id).innerHTML;
  if (xtype != 0 ) {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }

  ThetisBox.openTree("mailTree", folder_id, true);

  var name = trim(_z("mailTree:"+folder_id+"_name").innerHTML);
  confm("<%= t('paren.square.left') %>"+name+"<%= t('msg.confirm_to_delete') %>", "doDelete("+folder_id+")");
}

function doDelete(folder_id)
{
  var addParams = [];
  addParams.push(Form.serialize(document.form_folder_tree));
  addParams.push("id="+folder_id);
  addParams.push("authenticity_token=<%= form_authenticity_token %>");
<% unless params[:mail_account_xtype].nil? %>
  addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
<% end %>
  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }

  var thetisBoxProgress = prog("TOP-RIGHT");

  new Ajax.Request(
      "<%= url_for(:controller => 'mail_folders', :action => 'destroy') %>",
      {
        method:"post",
        parameters:addParams.join("&"),
        onComplete:function(request) {
          thetisBoxProgress.remove();
          if (request.responseText == "") {
            removeElem(_z("base_mailTree:"+folder_id));
            _z(ThetisBox.getSelKeeperId("mailTree")).value = "";
            clearMails();
          }
          request.responseText.evalScripts();
        }
      }
    );
}

function onMoveFolderClicked()
{
  var folder_id = ThetisBox.getSelectedTreeNodeId("mailTree");
  if (!folder_id) {
    msg("<%= t('folder.select') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('folder.root_folder_restricted') %>");
    return;
  }

  var xtype = _z("xtype_"+folder_id).innerHTML;
  if (xtype != 0 ) {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }

  ThetisBox.openTree("mailTree", folder_id, true);

  var thetisBox = new ThetisBox;
  thetisBox.show("CENTER", "", "TREE", "doMoveFolder("+thetisBox.id+", '"+folder_id+"')", "<%= t('folder.select_dest') %>", "");
  thetisBox.setTree("<%= url_for(:controller => 'mail_folders', :action => 'ajax_get_tree') %>?id="+folder_id, "0");
}

function doMoveFolder(thetisBoxId, folder_id)
{
  var thetisBox = ThetisBox.getInstance(thetisBoxId);
  if (thetisBox) {
    var treeNodeId = thetisBox.getSelectedTreeNodeId();
    if (treeNodeId) {
      ThetisBox.remove(thetisBoxId);

      var addParams = [];
    <% unless params[:mail_account_xtype].nil? %>
      addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
    <% end %>
      addParams.push("id="+folder_id);
      addParams.push("tree_node_id="+treeNodeId);
      addParams.push("authenticity_token=<%= form_authenticity_token %>");

      prog("TOP-RIGHT");

      var frm = createPostForm("<%= url_for(:controller => 'mail_folders', :action => 'move') %>", addParams);
      frm.submit();
    }
  }
}

function doSelectTree(folderId)
{
  ThetisBox.selectTree("mailTree", folderId, true);
  if (ThetisBox.isSelectedTree("mailTree", folderId)) {
    selectFolder(folderId);
  }
}

function selectFolder(folderId)
{
  doUpdateMails(folderId, false);
}

function doUpdateMails(folder_id, do_pop, addParams)
{
  if (folder_id == null) {
    folder_id = getCurrentFolderId();
  }

  if (!addParams) {
    addParams = [];
  }
  addParams.push("id="+folder_id);

  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }
  if (do_pop) {
    addParams.push("pop=true");
    invalidateAccountSummary();
  }
  doUpdateViewMails("get", "<%= url_for(:controller => 'mail_folders', :action => 'get_mails') %>", addParams, folder_id);
}

function showMail(email_id)
{
  var addParams = [];
  addParams.push("id="+email_id);

  doUpdateViewMailContent("<%= url_for(:controller => 'mail_folders', :action => 'get_mail_content') %>", addParams);
}

function doUpdateViewMailContent(action, addParams)
{
  if (!addParams) {
    addParams = [];
  }

  var thetisBoxProgress = prog("TOP-RIGHT");

  new Ajax.Updater(
      "div_mail_content",
      action,
      {
        method: "get",
        parameters: addParams.join("&"),
        evalScripts: true,
        onComplete: function(request) {
          thetisBoxProgress.remove();
        }
      }
    );
}

function clearMails()
{
  clearMailContent();

  _z("div_mails").innerHTML = "";
}

function clearMailContent()
{
  _z("div_mail_content").innerHTML = "";

  if (_z("selected_row"))
  {
    var sel_tr = _z("selected_row").value;
    if (sel_tr != "") {
      setTrBgcolor(_z(sel_tr), ((sel_tr.indexOf("_on")>=0)?"gainsboro":"white"));
      _z("selected_row").value = "";
    }
  }
}

var curSummaryAccountId = null;

function invalidateAccountSummary()
{
  curSummaryAccountId = null;
}

var lastMailAccountSummary = null;

function showMailAccountSummary(mail_account_id)
{
  if (mail_account_id) {
    var addParams = [];
    addParams.push("id="+mail_account_id);

    // var thetisBox = prog("TOP-RIGHT");
    new Ajax.Updater(
        "div_mail_content",
        "<%= url_for(:controller => 'mail_accounts', :action => 'show_summary') %>",
        {
          method: "get",
          parameters: addParams.join("&"),
          evalScripts: true,
          onComplete: function(request) {
            // thetisBox.remove();
            curSummaryAccountId = mail_account_id;

            lastMailAccountSummary = request.responseText;
          }
        }
      );
  } else {
    if (lastMailAccountSummary) {
      _z("div_mail_content").innerHTML = lastMailAccountSummary.stripScripts();
      lastMailAccountSummary.evalScripts();
    }
  }
}

function doUpdateViewMails(method, action, addParams, folder_id)
{
  removeHeaderInfo();

  if (!folder_id) {
    folder_id = getCurrentFolderId();
  }
  var mail_account_id = getMailAccountId(folder_id);

  var summaryNode = getElemByClassNameInChildNodes(_z("div_mail_content"), "mail_account_summary", true);
  if (summaryNode) {
    if (!mail_account_id || mail_account_id != curSummaryAccountId) {
      clearMailContent();
    }
  } else {
    clearMailContent();
    invalidateAccountSummary();
  }

  if (!addParams) {
    addParams = [];
  }
  if (method == "post") {
    addParams.push("authenticity_token=<%= form_authenticity_token %>");
  }

  var thetisBoxProgress = prog("TOP-RIGHT");
  new Ajax.Updater(
      "div_mails",
      action,
      {
        method: method,
        parameters: addParams.join("&"),
        evalScripts: true,
        onComplete: function(request) {
          thetisBoxProgress.remove();
          if (mail_account_id && mail_account_id != curSummaryAccountId) {
            showMailAccountSummary(mail_account_id);
          }
        }
      }
    );
}

function doCreateMail()
{
  var addParams = [];

  var folder_id = getCurrentFolderId();
  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }

  showMailForm(true, addParams);
}

function doEditMail(mode)
{
  var sel_tr = getSelectedRow();
  if (!sel_tr) {
    return;
  }

  var addParams = [];
  addParams.push("mode="+mode);

  var folder_id = getCurrentFolderId();
  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }

  var email_id = sel_tr.split("_")[1];
  addParams.push("id="+email_id);

  showMailForm(false, addParams);
}

function doReplyMail(to_all)
{
  doEditMail(to_all ? 'reply_to_all' : 'reply');
}

function doForwardMail()
{
  doEditMail('forward');
}

function getSelectedRow()
{
  if (!_z("selected_row") || _z("selected_row").value == "") {
    msg("<%= t('msg.select_mail') %>");
    return null;
  }
  return _z("selected_row").value;
}

function onEmptyFolderClicked()
{
  var folder_id = ThetisBox.getSelectedTreeNodeId("mailTree");
  if (!folder_id) {
    msg("<%= t('folder.select') %>");
    return;
  }
  var folder_id = getCurrentFolderId();

  if (folder_id == "0") {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }
  var xtype = _z("xtype_"+folder_id).innerHTML;
  if (xtype == "<%= MailFolder::XTYPE_ACCOUNT_ROOT %>") {
    msg("<%= t('msg.predetermined_folder_restricted') %>");
    return;
  }

  confm("<%= t('mail.confirm_to_empty') %>", "doEmpty("+folder_id+")");
}

function doEmpty(folder_id)
{
  var addParams = [];
  addParams.push("id="+folder_id);

  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }

  invalidateAccountSummary();
  doUpdateViewMails("post", "<%= url_for(:controller => 'mail_folders', :action => 'empty') %>", addParams, folder_id);
}


var thetisBoxFoldersOrder = null;

function onOrderFoldersClicked()
{
  var folder_id = getCurrentFolderId();
  if (!folder_id) {
    return;
  }

  if (thetisBoxFoldersOrder != null) {
    thetisBoxFoldersOrder.remove();
    thetisBoxFoldersOrder = null;
  }
  thetisBoxFoldersOrder = new ThetisBox;

  var addParams = [];
  addParams.push("id="+folder_id);

  var thetisBoxProgress = prog("TOP-RIGHT");
  new Ajax.Request(
      "<%= url_for(:controller => 'mail_folders', :action => 'get_folders_order') %>",
      {
        method:"get",
        parameters:addParams.join("&"),
        onComplete:function(request) {
          thetisBoxProgress.remove();

          thetisBoxFoldersOrder.title = "<%= t('btn.order') %>";
          thetisBoxFoldersOrder.show(
                    "CENTER",
                    "480,+280",
                    "TRAY",
                    "",
                    "",
                    request.responseText.stripScripts()
                  );
          request.responseText.evalScripts();
        }
      }
    );
}

function doDownloadMail()
{
  var sel_tr = getSelectedRow();
  if (!sel_tr)
    return;

  var email_id = sel_tr.split("_")[1];
  location.href = "<%= url_for(:controller => 'mail_folders', :action => 'get_mail_raw') %>?id="+email_id;
}

function showAddressBook()
{
  var thetisBox = new ThetisBox;
  thetisBox.resizable = true;
  thetisBox.title = "<%= t('address.book') %>";
  thetisBox.bgcolor_title = "limegreen";
  thetisBox.bgcolor_body = "lightcyan";

  thetisBox.show(
        "CENTER",
        (_mainWidth*80/100)+","+(_mainHeight*90/100),
        "IFRAME",
        "",
        "",
        "<%= url_for(:controller => 'addressbook', :action => 'list', :user_id => (@login_user.nil?)?(nil):(@login_user.id)) %>"
      );
}

thetisBoxFilters = null;

function showFilters()
{
  if (thetisBoxFilters != null) {
    thetisBoxFilters.remove();
    thetisBoxFilters = null;
  }

  var thetisBoxProgress = prog("CENTER");

  thetisBoxFilters = new ThetisBox;
  thetisBoxFilters.resizable = true;
  thetisBoxFilters.title = "<%= MailFilter.model_name.human %>";
  thetisBoxFilters.bgcolor_title = "#8486e0";
  thetisBoxFilters.bgcolor_body = "#a5baff";

  var addParams = [];
  var folder_id = getCurrentFolderId();
  var mail_account_id = getMailAccountId(folder_id);
  if (mail_account_id) {
    addParams.push("mail_account_id="+mail_account_id);
  }

  new Ajax.Request(
      "<%= url_for(:controller => 'mail_filters', :action => 'list') %>",
      {
        method:"get",
        parameters:addParams.join("&"),
        onComplete:function(request) {
          thetisBoxFilters.show(
                    "CENTER",
                    "520,360",
                    "TRAY",
                    "",
                    "",
                    request.responseText
                  );
          thetisBoxProgress.remove();
          request.responseText.evalScripts();
        }
      }
    );
}

thetisBoxAccount = null;

function showAccountSetting(isNew)
{
  var folder_id = getCurrentFolderId();
  var mail_account_id = getMailAccountId(folder_id);

  if (!isNew) {
    if (!folder_id || !mail_account_id) {
      msg("<%= t('msg.select_account') %>");
      return;
    }
  }

  var thetisBoxProgress = prog("CENTER");

  if (thetisBoxAccount != null){
    thetisBoxAccount.remove();
    thetisBoxAccount = null;
  }

  thetisBoxAccount = new ThetisBox;
  thetisBoxAccount.resizable = true;
  thetisBoxAccount.title = "<%= t('btn.account_setting') %>";

  var addParams = [];
<% unless params[:mail_account_xtype].nil? %>
  addParams.push("mail_account_xtype=<%= params[:mail_account_xtype] %>");
<% end %>

  var action = null;
  if (isNew) {
    addParams.push("xtype=<%= params[:mail_account_xtype] %>");
    action = "<%= url_for(:controller => 'mail_accounts', :action => 'new') %>";
  } else {
    addParams.push("id=" + mail_account_id);
    action = "<%= url_for(:controller => 'mail_accounts', :action => 'edit') %>"
  }

  new Ajax.Request(
      action,
      {
        method:"get",
        parameters:addParams.join("&"),
        onComplete:function(request) {
          thetisBoxAccount.show(
                    "CENTER",
                    "540,"+(_mainHeight*90/100),
                    "TRAY",
                    "",
                    "",
                    request.responseText
                  );
          thetisBoxProgress.remove();
          request.responseText.evalScripts();
        }
      }
    );
}

var thetisBoxHeaderInfo = null;

function removeHeaderInfo()
{
  if (thetisBoxHeaderInfo != null) {
    thetisBoxHeaderInfo.remove();
    thetisBoxHeaderInfo = null;
  }
}

function showHeaderInfo(email_id, title)
{
  removeHeaderInfo();

  thetisBoxHeaderInfo = new ThetisBox;
  thetisBoxHeaderInfo.bgcolor_title = "#8db7eb";
  thetisBoxHeaderInfo.bgcolor_body = "aliceblue";
  thetisBoxHeaderInfo.title = truncateStr(title, 28);
  thetisBoxHeaderInfo.border_content = "";
  thetisBoxHeaderInfo.bgcolor_content = "transparent";
  //thetisBoxHeaderInfo.resizable = true;
  var content = _z("mail_header_"+email_id).innerHTML.replace(/org_email/g, "email");
  thetisBoxHeaderInfo.show("TOP-RIGHT", "400,", "TRAY", "", "", content);
}

function onEmailUnreadClicked(elem, email_id)
{
  if (window.event) {
    window.event.cancelBubble = true;
  }

  var addParams = [];
  addParams.push("email_id="+email_id);
  addParams.push("unread="+((elem.checked)?"1":"0"));
  addParams.push("authenticity_token=<%= form_authenticity_token %>");

  var thetisBoxProgress = prog("TOP-RIGHT");

  new Ajax.Request(
      "<%= url_for(:controller => 'mail_folders', :action => 'update_mail_unread') %>",
      {
        method:"post",
        parameters:addParams.join("&"),
        onComplete:function(request) {
          thetisBoxProgress.remove();
          request.responseText.evalScripts();

          var div_mail_subject = _z("mail_subject_"+email_id);
          appendClassName(div_mail_subject, "email_subject_unread");
        }
      }
    );
  return true;
}

function doRegisterAddress(frm)
{
  var addParams = [];
  addParams.push(Form.serialize(frm));

  var thetisBoxProgress = prog("TOP-RIGHT");

  new Ajax.Request(
      frm.action,
      {
        method:"post",
        parameters:addParams.join("&"),
        onComplete:function(request) {
          thetisBoxProgress.remove();
          request.responseText.evalScripts();

          var instance = ThetisBox.getInstanceForElem(frm);
          if (instance) {
            instance.remove();
          }
        }
      }
    );
  return true;
}

function setFormListParams(formListParams_h)
{
  if (document.form_list) {
    document.form_list.folder_id.value = formListParams_h["folder_id"];
    document.form_list.mail_account_id.value = formListParams_h["mail_account_id"];
    document.form_list.sort_col.value = formListParams_h["sort_col"];
    document.form_list.sort_type.value = formListParams_h["sort_type"];
  }
}

function onMailAccountOptsClicked(elem, isBlur)
{
  var div_mail_account_opts = _z("div_mail_account_opts");
  if (div_mail_account_opts) {
    if (isBlur) {
      setPopupSweeper(div_mail_account_opts);
    } else {
      abortPopupSweeper(div_mail_account_opts);

      div_mail_account_opts.style.display = "";
      elem.focus();
    }
  }
}

function onMailFolderOptsClicked(elem, isBlur)
{
  var div_mail_folder_opts = _z("div_mail_folder_opts");
  if (div_mail_folder_opts) {
    if (isBlur) {
      setPopupSweeper(div_mail_folder_opts);
    } else {
      abortPopupSweeper(div_mail_folder_opts);

      div_mail_folder_opts.style.display = "";
      elem.focus();
    }
  }
}

var sweepTimersHash = {};

function setPopupSweeper(target, timerKey)
{
  var func = null;
  if (isFunc(target)) {
    func = target;
  } else {
    func = function() {
            target.style.display = "none";
          };
    if (!timerKey) {
      timerKey = target.id;
    }
  }

  sweepTimersHash[timerKey] = setTimeout(func, 200);
}

function abortPopupSweeper(target)
{
  var timerKey = target.id;

  if (sweepTimersHash[timerKey]) {
    clearTimeout(sweepTimersHash[timerKey]);
    sweepTimersHash[timerKey] = null;
  }
}

onFolderTreeNodeClicked = function(folderId)
{
  selectFolder(folderId);
  var selNodeId = ThetisBox.getSelectedTreeNodeId("mailTree");
  if (selNodeId == folderId) {
    ThetisBox.toggleTree("mailTree", folderId);
  }
  ThetisBox.selectTree("mailTree", folderId);
}

</script>
