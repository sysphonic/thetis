
<%= form_tag( {:controller => 'zeptair_xlogs', :action => 'search'}, :method => 'get', :name => 'form_list') %>

<table style="width:100%; margin-bottom:5px; border-spacing:3px;">
  <tr>
    <td style="text-align:left; width:1%;" nowrap>
      <img class="img_btn" src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/csv_exp.png" title="<%= t('btn.export_csv') %>" onclick="exportCsv();">
    </td>
    <td style="text-align:right;">
      <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/search.png" title="<%= t('cap.search_keywords') %>">
      &nbsp;<input type="text" id="keyword" name="keyword" value="<%= params[:keyword] %>" />
    <% unless @login_user.nil? %>
      <%= t('cap.targets') %>
      <%
      opts = [
        [t('log.all'), 'all'],
        ['HTTP', 'HTTP'],
        ['HTTP(PROXY)', 'HTTP(PROXY)'],
        ['HTTPS', 'HTTPS'],
        ['POP3', 'POP3'],
        ['SMTP', 'SMTP'],
        ['FTP', 'FTP'],
        [t('paren.unknown'), 'UNKNOWN']
      ]
      %>
      <%= select_tag('filter', options_for_select(opts, params[:filter])) %>
    <% end %>
      <input type="button" value="<%= t('btn.search') %>" onclick="prog('TOP-RIGHT'); submit();"/>
      <input type="button" value="<%= t('btn.reset') %>" onclick="prog('TOP-RIGHT'); location.href='<%= url_for(:controller => 'zeptair_xlogs', :action => 'list') %>';"/>
    </td>
  </tr>
  <tr style="height:5px;"><td></td></tr>
  <tr>
    <td colspan="2" style="text-align:right;" nowrap>
      <input type="button" value="<%= t('btn.delete_all')%>" onclick="onClearXLogClicked(); return false;">&nbsp;&nbsp;
      <input type="button" value="<%= t('btn.select_deselect_all')%>" onclick="selectAll(); return false;">
      <span style="color:silver;">|</span>
      <input type="button" value="<%= t('btn.delete')%>" onclick="onDeleteXLogClicked(); return false;">
    </td>
  </tr>
</table>

<table style="width:100%; margin-bottom:10px;">
  <tr>
    <td class="pagination_td" style="text-align:center;">
      <%= t('cap.total') %><%= t('log', :count => @total_num) %>
      <%
      prms = ApplicationHelper.dup_hash(params)
      prms.delete('authenticity_token')
      prms.delete('check_xlog')
      prms['action'] = 'list'
      pagination = will_paginate(@xlog_pages, :params => prms)
      pagination = ApplicationHelper.custom_pagination(pagination)
      %>
      <%= raw(pagination) %>
    </td>
  </tr>
</table>

<div class="base_list" id="div_logs">
<table class="regular_table" id="list_logs">
 <thead>
  <tr>
    <th class="list_sort" style="width:15%;" nowrap onclick="sortList('fin_at')"><%= ZeptairXlog.human_attribute_name('fin_at') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('fin_at', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:15%;" nowrap onclick="sortList('req_at')"><%= ZeptairXlog.human_attribute_name('req_at') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('req_at', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:15%;" nowrap onclick="sortList('user_id')"><%= User.model_name.human %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('user_id', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:20%;" nowrap onclick="sortList('s_addr')"><%= ZeptairXlog.human_attribute_name('s_addr') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('s_addr', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:10%;"  nowrap onclick="sortList('cs_protocol')"><%= ZeptairXlog.human_attribute_name('cs_protocol') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('cs_protocol', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:25%;" nowrap onclick="sortList('cs_uri')"><%= ZeptairXlog.human_attribute_name('cs_uri') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('cs_uri', @sort_col, @sort_type)) %></span></th>
  </tr>
 </thead>
 <tbody>
<%
users_cache = {}
exist_cache = {}
@xlogs.each_with_index do |xlog, idx|
%>
  <tr>
    <td nowrap style="text-align:center;"><%= xlog.fin_at.strftime(THETIS_DATE_FORMAT_YMD+' %H:%M') %></td>
    <td nowrap style="text-align:center;"><%= xlog.req_at.strftime(THETIS_DATE_FORMAT_YMD+' %H:%M') %></td>
    <%
    user_exist = false
    user_name = ''
    unless xlog.user_id.nil?
      if exist_cache[xlog.user_id].nil?
        begin
          user = User.find(xlog.user_id)
          user_name = user.get_name
          user_exist = true
        rescue
          user_name = xlog.user_id.to_s + ' ' + t('paren.deleted')
        end
        users_cache[xlog.user_id] = user_name
        exist_cache[xlog.user_id] = user_exist
      else
        user_name = users_cache[xlog.user_id]
        user_exist = exist_cache[xlog.user_id]
      end
    end
    if user_exist == false
    %>
      <td style="color:crimson"><%= user_name %></td>
    <% else %>
      <% if @login_user.admin?(User::AUTH_USER) %>
        <td>
          <a class="a_underline" href="javascript:this.onclick()" onclick="prog('TOP-RIGHT'); location.href='<%= url_for(:controller => 'users', :action => 'show', :id => xlog.user_id) %>'; return false;">
            <%= truncate(user_name, :length => 20) %>
          </a>
        </td>
      <% else %>
        <td><%= truncate(user_name, :length => 20) %></td>
    <%
      end
    end
    %>
    <td nowrap style="text-align:center;">
      <%
      disp_s_addr = xlog.s_addr
      if !xlog.s_addr.nil? and xlog.s_addr.length > 20
        disp_s_addr = truncate(xlog.s_addr, :length => 10)
        disp_s_addr += xlog.s_addr[-10..-1]
      end
      %>
      <span title="<%= xlog.s_addr %>"><%= disp_s_addr %></span>
    </td>
    <%
    type_color = 'black'
    type_color = 'blue' unless xlog.cs_protocol.index('HTTP').nil?
    type_color = 'red' if xlog.cs_protocol == 'SMTP' or xlog.cs_protocol == 'POP3'
    %>
    <td nowrap style="text-align:center; color:<%= type_color %>">
      <%= xlog.cs_protocol %>
    </td>
    <td nowrap>
      <%= truncate(xlog.cs_uri, :length => 20) %>
    </td>
    <td nowrap style="text-align:center;">
      <img class="img_btn" src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/zoom.png" title="<%= t('btn.detail') %>" onclick="msg('<%= ApplicationHelper.h_s_quote(xlog.get_detail.gsub('<', '').gsub('>', '')) %>');">
    </td>
    <td nowrap style="text-align:center;">
      <input type="hidden" name="check_xlog[<%= xlog.id %>]" value="0" />
      <input type="checkbox" class="check_xlog" id="check_xlog_<%= xlog.id %>" name="check_xlog[<%= xlog.id %>]" value="1" />
    </td>
  </tr>
<% end %>
 </tbody>
</table>
</div>

<input type="hidden" id="sort_col" name="sort_col" value="<%= params[:sort_col] %>" />
<input type="hidden" id="sort_type" name="sort_type" value="<%= params[:sort_type] %>" />

</form>

<script type="text/javascript">

function sortList(col)
{
  var type = "<%= @sort_type %>";

  if (col == "<%= @sort_col %>") {
    type = (type == "ASC") ? "DESC" : "ASC";
  }

  document.form_list.action = "<%= url_for(:controller => 'zeptair_xlogs', :action => 'list') %>";
  document.form_list.sort_col.value = col;
  document.form_list.sort_type.value = type;
  document.form_list.submit();
  prog("TOP-RIGHT");
}

function selectAll()
{
  var elems = document.getElementsByClassName("check_xlog", document.form_list);
  var all_selected=true;
  for (var i=0; elems != null && i < elems.length; i++) {
    if (!elems[i].checked) {
      all_selected = false;
      break;
    }
  }
  for (var i=0; elems != null && i < elems.length; i++) {
    elems[i].checked = !all_selected;
  }
}

function onDeleteXLogClicked()
{
  var elems = document.getElementsByClassName("check_xlog", document.form_list);
  var count=0;
  for (var i=0; elems!=null && i<elems.length; i++) {
    if (elems[i].checked) {
      count++;
    }
  }
  if (count <= 0) return;

  confm(count+"<%= t('log.confirm_to_delete') %>", "doDelete()");
}

function doDelete()
{
  prog("TOP-RIGHT");
  document.form_list.action = "<%= url_for(:controller => 'zeptair_xlogs', :action => 'destroy') %>";
  document.form_list.method = "post";
  document.form_list.submit();
}

function onClearXLogClicked()
{
  confm("<%= t('log.confirm_to_delete_all') %>", "doDeleteAll()");
}

function doDeleteAll()
{
  prog("TOP-RIGHT");
  document.form_list.action = "<%= url_for(:controller => 'zeptair_xlogs', :action => 'destroy_all') %>";
  document.form_list.method = "post";
  document.form_list.submit();
}

var thetisBoxExport = null;

function exportCsv()
{
  if (thetisBoxExport != null){
    thetisBoxExport.remove();
    thetisBoxExport = null;
  }

  var content = getEncodingSelector("doExportCsv()", "export");

  thetisBoxExport = new ThetisBox;
  thetisBoxExport.title = "<%= t('zeptair.xlog.title_export') %>";
  thetisBoxExport.show("CENTER", "380,280", "TRAY", "", "<%= t('msg.select_encoding') %> ", content);
}

function doExportCsv()
{
  var enc = null;
  for (var i=0; i<document.form_enc.enc.length; i++) {
    if (document.form_enc.enc[i].checked) {
      enc = document.form_enc.enc[i].value;
      break;
    }
  }
  if (enc == null) {
    return;
  }
  thetisBoxExport.remove();
  thetisBoxExport = null;

  location="<%= url_for(:controller => 'zeptair_xlogs', :action => 'export_csv') %>?enc="+enc;
}

</script>

<%= render(:partial => 'common/encoding_selector') %>

