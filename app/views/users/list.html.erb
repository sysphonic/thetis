
<%
@groups_cache ||= {}
@group_obj_cache ||= {}

official_title_obj_cache = {}
%>

<%= form_tag( {:controller => 'users', :action => 'list'}, :method => 'get', :name => 'form_list') %>

<table style="width:100%; padding-bottom:5px;">
  <tr>
  <% if @login_user.admin?(User::AUTH_USER) %>
    <td style="text-align:left; width:1%;" nowrap>
      <img class="img_btn" src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/user_add.png" title="<%= t('btn.create') %>" onclick="doEditUser(null);">
    </td>
    <td style="width:10px;"></td>
    <td style="text-align:left; width:1%;" nowrap>
      <img class="img_btn" src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/csv_exp.png" title="<%= t('btn.export_csv') %>" onclick="exportCsv();">
    </td>
    <td style="width:10px;"></td>
    <td style="text-align:left; width:1%;" nowrap>
      <img class="img_btn" src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/csv_imp.png" title="<%= t('btn.import_csv') %>" onclick="importCsv();">
    </td>
    <td style="width:10px;"></td>
    <td style="text-align:left; width:1%;" nowrap>
      <img class="img_btn" src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/config.png" title="<%= t('btn.config') %>" onclick="prog('TOP-RIGHT'); location.href='<%= url_for(:controller => 'users', :action => 'configure') %>';">
    </td>
  <% end %>
    <td style="text-align:right;" nowrap>
      <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/search.png" title="<%= t('cap.search_keywords') %>">&nbsp;<input type="text" id="keyword" name="keyword" value="<%= params[:keyword] %>" />
      <input type="button" value="<%= t('btn.search') %>" onclick="form_list.action='<%= url_for(:controller => 'users', :action => 'search') %>'; form_list.submit(); prog('TOP-RIGHT');"/>
      <input type="button" value="<%= t('btn.reset') %>" onclick="location.href='<%= url_for(:controller => 'users', :action => 'list') %>'; prog('TOP-RIGHT');"/>
    </td>
  </tr>
</table>

<table style="width:100%; padding-bottom:5px;">
  <tr>
    <td style="text-align:left;" nowrap>
  <% if @group_id.blank? %>
      <div class="button_gray" style="float:left;" onclick="showGroupTreeToSelect('<%= TreeElement::ROOT_ID %>');">
        <%= t('btn.select_group') %>
      </div>
  <% else %>
      <%= t('cap.group') %> <a class="linked_path" href="javascript:this.onclick()" onclick="showGroupTreeToSelect('<%= @group_id %>'); return false;"><%= Group.get_path(@group_id, @groups_cache, @group_obj_cache) %></a>
      <img class="img_btn" src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/erase.png" title="<%= t('btn.clear') %>" onclick="clearGroup()" style="margin-left:10px;" />
  <% end %>
    </td>
    <td style="text-align:right;" nowrap>
  <% if @login_user.admin?(User::AUTH_USER) %>
      <input type="button" value="<%= t('btn.select_deselect_all')%>" onclick="selectAll();">
      <span style="color:silver;">|</span>
      <input type="button" value="<%= t('btn.delete')%>" onclick="onDeleteUserClicked();">
      <input type="button" value="<%= t('btn.send_notification')%>" onclick="onNotifyClicked();">
  <% else %>
      &nbsp;
  <% end %>
    </td>
  </tr>
</table>

<table style="width:100%; padding-bottom:7px;">
  <tr>
    <td class="pagination_td" style="text-align:center;">
      <%= t('cap.total') %><%= t('user', :count => @total_num) %>
      <%
      prms = ApplicationHelper.dup_hash(params)
      prms.delete('authenticity_token')
      prms.delete('check_user')
      prms['action'] = 'list'
      pagination = will_paginate(@user_pages, :params => prms)
      pagination = ApplicationHelper.custom_pagination(pagination)
      %>
      <%= raw(pagination) %>
    </td>
  </tr>
</table>

<div class="base_list" id="div_users">
<table class="regular_table" id="list_users">
 <thead>
  <tr>
    <th class="list_sort" style="width:5%;"  nowrap onclick="sortList('User.id')"><%= t('activerecord.attributes.id') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('User.id', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:16%;" nowrap onclick="sortList('User.name')"><%= t('user.u_name') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('User.name', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:20%;" nowrap onclick="sortList('User.fullname')"><%= User.human_attribute_name('fullname') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('User.fullname', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:26%;" nowrap onclick="sortList('User.email')"><%= User.human_attribute_name('email') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('User.email', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:10%;" nowrap onclick="sortList('OfficialTitle.xorder')"><%= t('user.title') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('OfficialTitle.xorder', @sort_col, @sort_type)) %></span></th>
    <th class="list_sort" style="width:20%;" nowrap onclick="sortList('User.groups')"><%= User.human_attribute_name('organization') %><span class="sort_direction"><%= raw(ApplicationHelper.get_sort_direction_exp('User.groups', @sort_col, @sort_type)) %></span></th>
  </tr>
 </thead>
 <tbody>
<% @users.each_with_index do |user, idx|  %>
  <tr>
    <td nowrap style="text-align:right;">
      <%= user.id %>
    </td>
    <td nowrap>
      <a class="a_underline" href="javascript:this.onclick()" onclick="showUser(<%= user.id %>); return false;">
        <%= truncate(user.name, :length => 20) %>
      </a>
    </td>
    <td nowrap>
      <%= truncate(user.fullname, :length => 30) %>
    </td>
    <td nowrap>
      <%= truncate(user.email, :length => 30) %>
    </td>
    <td nowrap>
    <% user.user_titles.each do |user_title|  %>
      <%= truncate(OfficialTitle.get_name(user_title.official_title_id, official_title_obj_cache), :length => 10) %><br/>
    <% end  %>
    </td>
    <td nowrap>
      <% user.get_groups_a.each do |group_id| %>
        <%= Group.get_path(group_id, @groups_cache, @group_obj_cache) %><br/>
      <% end %>
    </td>
  <% if @login_user.admin?(User::AUTH_USER) %>
    <td nowrap style="text-align:center;">
      <img class="img_btn" src="<%= THETIS_RELATIVE_URL_ROOT %>/images/icons/edit.png" title="<%= t('btn.edit') %>" onclick="doEditUser(<%= user.id %>);" />
    </td>
    <td style="width:20px; text-align:center;">
      <input type="hidden" name="check_user[<%= user.id %>]" value="0" />
      <input type="checkbox" class="check_user" id="check_user_<%= user.id %>" name="check_user[<%= user.id %>]" value="1" />
    </td>
  <% end %>
  </tr>
<% end %>
 </tbody>
</table>
</div>

<input type="hidden" id="sort_col" name="sort_col" value="<%= params[:sort_col] %>" />
<input type="hidden" id="sort_type" name="sort_type" value="<%= params[:sort_type] %>" />
<input type="hidden" id="group_id" name="group_id" value="<%= @group_id %>" />

</form>

<script type="text/javascript">

function doUpdatePage()
{
  prog("TOP-RIGHT");
  document.form_list.submit();
}

var thetisBoxUser = null;

function setUserModified()
{
  if (thetisBoxUser) {
    thetisBoxUser.setOnClose("doUpdatePage()");
  }
}

function doEditUser(user_id)
{
  prog("TOP-RIGHT");

  var addParams = [];
  addParams.push("from=users_list");

  if (user_id) {
    addParams.push("id="+user_id);
    location.href = "<%= url_for(:controller => 'users',:action => 'edit') %>?" + addParams.join("&");
  } else {
    location.href = "<%= url_for(:controller => 'users', :action => 'new') %>?" + addParams.join("&");
  }

/* POP-UP Edition
  if (thetisBoxUser != null) {
    thetisBoxUser.remove();
    thetisBoxUser = null;
  }
  var mainRegion = getClientRegion();
  var mainWidth = mainRegion.width;
  var mainHeight = mainRegion.height;

  var thetisBoxProgress = prog("CENTER");

  var addParams = [];
  addParams.push("from=users_list");

  var action = null;
  var width = null;
  if (user_id) {
    action = "<%= url_for(:controller => 'users', :action => 'edit') %>";
    addParams.push("id="+user_id);
    width = mainWidth*8/10;
  } else {
    action = "<%= url_for(:controller => 'users', :action => 'new') %>";
    width = 560;
  }

  new Ajax.Request(
      action,
      {
        method:"get",
        parameters:addParams.join("&"),
        onComplete:function(request) {
          thetisBoxUser = new ThetisBox;
          thetisBoxUser.title = "<%= User.model_name.human %>";
          //thetisBoxUser.overflow = "scroll";
          thetisBoxUser.show(
                    "CENTER",
                    width+",+"+(mainHeight*9/10),
                    "TRAY",
                    "",
                    "",
                    request.responseText.stripScripts()
                  );
          thetisBoxProgress.remove();
          request.responseText.evalScripts();
        }
      }
    );
*/
}

function showUser(user_id)
{
  prog("TOP-RIGHT");

  var addParams = [];
  addParams.push("id="+user_id);

  location.href = "<%= url_for(:controller => 'users', :action => 'show') %>?" + addParams.join("&");

/* POP-UP Edition
  var mainRegion = getClientRegion();
  var mainWidth = mainRegion.width;
  var mainHeight = mainRegion.height;

  var thetisBoxProgress = prog("CENTER");

  var addParams = [];
  addParams.push("id="+user_id);

  new Ajax.Request(
      "<%= url_for(:controller => 'users', :action => 'show') %>",
      {
        method:"get",
        parameters:addParams.join("&"),
        onComplete:function(request) {
          var thetisBox = new ThetisBox;
          thetisBox.title = "<%= User.model_name.human %>";
          //thetisBox.overflow = "scroll";
          thetisBox.show(
                    "CENTER",
                    (mainWidth*8/10)+",+"+(mainHeight*9/10),
                    "TRAY",
                    "",
                    "",
                    request.responseText.stripScripts()
                  );
          thetisBoxProgress.remove();
          request.responseText.evalScripts();
        }
      }
    );
*/
}

var thetisBox = null;

function selectAll()
{
  var elems = document.getElementsByClassName("check_user", document.form_list);
  var all_selected = true;
  for (var i=0; elems != null && i < elems.length; i++) {
    if (!elems[i].checked) {
      all_selected = false;
      break;
    }
  }
  for (var i=0; elems != null && i < elems.length; i++) {
    elems[i].checked = !all_selected;
  }
}

function exportCsv()
{
  if (thetisBox != null){
    thetisBox.remove();
    thetisBox = null;
  }

  var content = getEncodingSelector("doExportCsv()", "export");

  thetisBox = new ThetisBox;
  thetisBox.title = "<%= t('user.title_export') %>";
  thetisBox.show("CENTER", "380,280", "TRAY", "", "<%= t('msg.select_encoding') %> ", content);
}

function doExportCsv()
{
  var enc = null;
  for (var i=0; i<document.form_enc.enc.length; i++) {
    if (document.form_enc.enc[i].checked) {
      enc = document.form_enc.enc[i].value;
      break;
    }
  }
  if (enc == null) {
    return;
  }
  thetisBox.remove();
  thetisBox = null;

  // prog("TOP-RIGHT");
  location="<%= url_for(:controller => 'users', :action => 'export_csv') %>?enc="+enc;
}

function importCsv()
{
  if (thetisBox != null){
    thetisBox.remove();
    thetisBox = null;
  }

  var content = getEncodingSelector("doImportCsv()", "import");

  thetisBox = new ThetisBox;
  thetisBox.title = "<%= t('user.title_import') %>";
  thetisBox.show("CENTER", "380,400", "TRAY", "", "<%= t('msg.specify_csv_encoding') %> ", content);
}

function doImportCsv()
{
  if (document.form_enc.imp_file.value == "") {
    msg("<%= t('msg.specify_csv') %>");
    return "";
  }
  var enc = null;
  for (var i=0; i<document.form_enc.enc.length; i++) {
    if (document.form_enc.enc[i].checked) {
      enc = document.form_enc.enc[i].value;
      break;
    }
  }
  if (enc == null) {
    msg("<%= t('msg.select_encoding_of_csv') %>");
    return;
  }
  var mode = null;
  for (var i=0; i<document.form_enc.mode.length; i++) {
    if (document.form_enc.mode[i].checked) {
      mode = document.form_enc.mode[i].value;
      break;
    }
  }
  if (mode == null) {
    msg("<%= t('msg.select_import_mode') %>");
    return;
  }

  document.form_enc.method = "post";
  document.form_enc.action = "<%= url_for(:controller => 'users', :action => 'import_csv') %>";
  document.form_enc.submit();

  prog("TOP-RIGHT");

  thetisBox.hide();
}

function onDeleteUserClicked()
{
  var elems = document.getElementsByClassName("check_user", document.form_list);
  var count=0;
  for (var i=0; elems!=null && i<elems.length; i++) {
    if (elems[i].checked) {
      var user_id = elems[i].id.split("_")[2];
      if (user_id == "<%= @login_user.id %>") {
        msg("<%= t('user.cannot_remove_yourself') %>");
        return;
      }
      count++;
    }
  }
  if (count <= 0) {
    return;
  }
  confm(count+"<%= t('user.confirm_to_delete') %>", "doDelete()");
}

function doDelete()
{
  document.form_list.action = "<%= url_for(:controller => 'users', :action => 'destroy') %>";
  document.form_list.method = "post";
  addInputHidden(document.form_list, null, "authenticity_token", "<%= form_authenticity_token %>");
  document.form_list.submit();

  prog("TOP-RIGHT");
}

function getCheckedUsersParam()
{
  var addParams = [];

  var elems = document.getElementsByClassName("check_user", document.form_list);
  for (var i=0; elems != null && i < elems.length; i++) {
    if (elems[i].checked) {
      var user_id = elems[i].id.split("_")[2];
      addParams.push("check_user["+user_id+"]=1");
    }
  }
  return addParams;
}

function onNotifyClicked()
{
  var addParams = getCheckedUsersParam();
  var count = addParams.length;

  if (count <= 0) {
    msg("<%= t('msg.select_users_to_notify') %>");
    return false;
  }

  var thetisBox = new ThetisBox;
  thetisBox.show(
                "CENTER", "540,200", "TEXTAREA",
                "doNotify("+thetisBox.id+")",
                "<%= t('msg.notify_info1') %>"+count+"<%= t('msg.notify_info2') %><br/><%= t('msg.notify_info3') %>",
                ""
              );
}

function doNotify(thetisBoxId)
{
  var thetisBoxEdit = _z("thetisBoxEdit-"+thetisBoxId);
  if (thetisBoxEdit && thetisBoxEdit.value) {
    var val = thetisBoxEdit.value;
    ThetisBox.remove(thetisBoxId);

    var addParams = getCheckedUsersParam();
    var count = addParams.length;
    if (count <= 0) {
      return false;
    }
    prog("TOP-RIGHT");
    var frm = createPostForm("<%= url_for(:controller => 'users', :action => 'notify') %>", addParams);
    addInputHidden(frm, null, "thetisBoxEdit", val, null);
    frm.submit();
  }
  return true;
}

function clearGroup()
{
  prog("TOP-RIGHT");
  document.form_list.group_id.value = "";
  document.form_list.submit();
}

function sortList(col)
{
  var type = "<%= @sort_type %>";
  
  if (col == "<%= @sort_col %>") {
    type = (type == "ASC") ? "DESC" : "ASC";
  }

  prog("TOP-RIGHT");
  document.form_list.sort_col.value = col;
  document.form_list.sort_type.value = type;
  document.form_list.submit();
}

function showGroupTreeToSelect(group_id)
{
  var thetisBox = new ThetisBox;
  thetisBox.show("CENTER", "", "TREE", "onGroupTreeNodeSelected("+thetisBox.id+")", "<%= t('group.select_to_show')%>", "");
  thetisBox.setTree("<%= url_for(:controller => 'groups', :action => 'ajax_get_tree') %>", group_id);
}

function onGroupTreeNodeSelected(thetisBoxId)
{
  var thetisBox = ThetisBox.getInstance(thetisBoxId);
  if (thetisBox) {
    var treeNodeId = thetisBox.getSelectedTreeNodeId();
    if (treeNodeId) {
      ThetisBox.remove(thetisBoxId);

      prog("TOP-RIGHT");
      var addParams = [
        "tree_node_id="+treeNodeId
      ];
      location.href = "<%= url_for(:controller => 'users', :action => 'list') %>?"+addParams.join("&");
    }
  }
}

</script>

<%
unless @imp_errs.nil? or @imp_errs.empty?
%>

<div id="imp_errs" style="display:none;">
<table style="width:100%;">
  <tr style="height:20px;">
    <td style="text-align:right; color:blueviolet; padding-right:10px; padding-top:10px;">
      <%= @imp_cnt.to_s + t('user.imported') %><br/>
    </td>
  </tr>
  <tr>
    <td style="vertical-align:top; padding:10px;">
      <table style="width:100%;" border="1">
<%
err_cnt = 0
@imp_errs.each do |user_cnt, errs|
  if err_cnt < 20
%>
        <tr>
        <% if user_cnt > 0 %>
          <td style="text-align:right; vertical-align:top; padding:0px 3px;">
            <%= user_cnt.to_s + t('user.err_list_cap') %>
          </td>
          <td style="text-align:left; vertical-align:top; padding:0px 3px;">
        <% else %>
          <td style="text-align:left; vertical-align:top; padding:0px 3px;" colspan="2">
        <% end %>
        <% errs.each do |err| %>
            &bull; <%= err %><br/>
        <% end %>
          </td>
        </tr>
<% else %>
        <tr>
          <td colspan="2" nowrap style="text-align:center; padding-left:3px; padding-right:3px; vertical-align:top;">
            <b>...</b>
          </td>
        </tr>
<%
    break
  end
  err_cnt += 1
end
%>
      </table>
    </td>
  </tr>
</table>
</div>

<script type="text/javascript">

function showImportError()
{
  var thetisBox = new ThetisBox;
  thetisBox.title = "<%= t('cap.import_error') %>";
  thetisBox.bgcolor_title = "crimson";
  thetisBox.bgcolor_body = "salmon";
  thetisBox.show("CENTER", (_mainWidth*7/10)+",450", "TRAY", "", "<%= t('msg.error_detected') %>", _z("imp_errs").innerHTML);
}

function onLoadSub()
{
  setTimeout("showImportError()", 100);
}

</script>

<% end %>

<%= render(:partial => 'common/encoding_selector') %>
