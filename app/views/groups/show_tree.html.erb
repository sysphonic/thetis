
<%= render(:partial => 'common/plupload_init') %>

<table id="tree_main" style="width:100%; background-color:burlywood; border:solid 2px; border-top-color:palegoldenrod; border-left-color:palegoldenrod; border-bottom-color:dimgray; border-right-color:dimgray;">
  <tr>
    <td>
      <table style="width:100%;">
        <tr>
          <td nowrap style="padding:5px 20px; text-align:left;">
          <% if @login_user.admin?(User::AUTH_GROUP) %>
            <input type="button" value="<%= t('btn.new') %>" onclick="onCreateGroupClicked(getPos(this));" style="width:80px;" />
            <input type="button" value="<%= t('btn.rename') %>" onclick="onRenameGroupClicked(getPos(this));" style="width:80px;" />
            <input type="button" value="<%= t('btn.delete') %>" onclick="onDeleteGroupClicked();" style="width:80px;" />
            <input type="button" value="<%= t('btn.move') %>" onclick="onMoveGroupClicked();" style="width:80px;"/>
          <% else %>
            <%= t('group.only_admin_can_edit_tree') %>
          <% end %>
          </td>
          <td style="padding:5px 20px; text-align:right;">
            <%
            opts = []
            opts << [User.model_name.human, 'user']
            opts << [t('group.opt.subgroups_order'), 'groups_order']
            opts << [OfficialTitle.model_name.human, 'official_title']
            opts << [Workflow.model_name.human, 'workflow']
            opts << [OfficeMap.model_name.human, 'office_map']
            %>
            <%= select_tag('select_opt', options_for_select(opts, session[:group_option]), :onchange => 'changeOption(this.value);', :style => 'width:200px; color:chocolate; font-weight:bold;') %>
          </td>
        </tr>
      </table>
    </td>
  </tr>
  <tr style="height:100%;">
    <td style="padding-bottom:7px; text-align:center;">

      <table style="background-color:white; width:100%;">
        <tr>
          <td id="td_tree" style="text-align:left; vertical-align:top; border:inset 2px silver; padding:0px;">
            <%= form_tag( {:controller => 'groups', :action => 'show_tree'}, :method => 'post', :name => 'form_group_tree') %>
              <div id="divGroupTree" style="overflow:auto;"><div id="groupTree" style="text-align:left; margin:10px;"></div></div>
            </form>
          </td>
          <td id="drag_border" style="width:5px; background-color:burlywood; cursor:w-resize; vertical-align:middle;">
            <img src="<%= THETIS_RELATIVE_URL_ROOT %>/images/controls/grip_vertical.png">
          </td>
          <td id="td_view" style="width:63%; border:inset 2px silver; text-align:center; vertical-align:top;">
            <div id="div_view" style="width:100%; overflow:auto;">&nbsp;</div>
          </td>
        </tr>
      </table>

    </td>
  </tr>
</table>

<script type="text/javascript">

new Draggable("drag_border", {revert:false, constraint:"horizontal"});

var BorderDragObserver = Class.create();
BorderDragObserver.prototype = {
  initialize: function() {
  },
  onStart: function(eventName, draggable, event) {
  },
  onDrag: function(eventName, draggable, event) {
    if (draggable.element.id != "drag_border") {
      return;
    }
    var divGroupTree = _z("divGroupTree");
    var td_tree = _z("td_tree");
    var view = _z("div_view");
    var td_view = _z("td_view");
    var orgWidthGroupTree = divGroupTree.offsetWidth;
    var orgWidthView = view.offsetWidth;

    draggable.options.snap = function(x, y) {
      return onBorderDragged(x, y, divGroupTree, td_tree, view, td_view, orgWidthGroupTree, orgWidthView);
    };
  },
  onEnd: function(eventName, draggable, event) {
  }
}
Draggables.addObserver( new BorderDragObserver() );

function onBorderDragged(x, y, divGroupTree, td_tree, view, td_view, orgWidthGroupTree, orgWidthView)
{
  var leftWidth = orgWidthGroupTree + x;
  var rightWidth = orgWidthView - x;
  if (leftWidth < 100 && x < 0) {
    return [100-orgWidthGroupTree, y];
  } else if (rightWidth < 100 && x > 0) {
    return [orgWidthView-100, y];
  }
  divGroupTree.style.width = leftWidth + "px";
  td_tree.style.width = leftWidth + "px";
  view.style.width = rightWidth + "px";
  td_view.style.width = rightWidth + "px";
  return [x, y];
}

function onLoadSub()
{
  <%
  group_folder_open = THETIS_RELATIVE_URL_ROOT + '/images/folder/group_folder_open.png'
  group_folder_close = THETIS_RELATIVE_URL_ROOT + '/images/folder/group_folder_close.png'
  %>
  var folderImgs = [
    ["<%= group_folder_open %>", "<%= group_folder_close %>"]
  ];
  var array = [["0", "/(root)", "", "selectGroup('0');", 0]];
  ThetisBox.buildTree("", array, "groupTree", folderImgs);
  <% @group_tree.each do |parent_id, child_groups| %>
  array = [
<% child_groups.each_with_index do |group, idx| %>
    ["<%= group.id %>", "/<%= group.name %>", "", "selectGroup('<%= group.id %>');", 0]
  <% if idx < (child_groups.length - 1) %>
    ,
<%
  end
end
%>
  ];
  ThetisBox.buildTree("<%= parent_id %>", array, "groupTree", folderImgs, false);
  <% end %>

<% unless session[:group_id].blank? %>
  var nodeId = "<%= session[:group_id] %>";
  ThetisBox.selectTree("groupTree", nodeId, true);
  if (ThetisBox.isSelectedTree("groupTree", nodeId)) {
    selectGroup(<%= session[:group_id] %>);
  }
<% end %>
}

function doCreateGroup(thetisBoxId, group_id)
{
  var thetisBoxEdit = _z("thetisBoxEdit-"+thetisBoxId);
  if (thetisBoxEdit && thetisBoxEdit.value) {
    var val = thetisBoxEdit.value;
    ThetisBox.remove(thetisBoxId);

    var addParams = [];
    addParams.push("selectedGroupId="+group_id);
    addParams.push("thetisBoxEdit="+encodeURIComponent(val));
    addParams.push("authenticity_token=<%= form_authenticity_token %>");

    var thetisBoxProgress = prog("TOP-RIGHT");

    new Ajax.Updater(
        "groupTree:"+group_id,
        "<%= url_for(:controller => 'groups', :action => 'create') %>",
        {
          method:"post",
          parameters:addParams.join("&"),
          evalScripts:true,
          insertion:Insertion.Bottom,
          onComplete:function(request) {
            thetisBoxProgress.remove();
          }
        }
      );
  }
}

function onCreateGroupClicked(pos)
{
  var group_id = ThetisBox.getSelectedTreeNodeId("groupTree");
  if (!group_id) {
    msg("<%= t('group.select_parent') %>");
    return;
  }

  ThetisBox.openTree("groupTree", group_id, true);

  var thetisBox = new ThetisBox;
  thetisBox.show((pos.x)+","+(pos.y+25), "", "INPUT", "doCreateGroup("+thetisBox.id+", '"+group_id+"')", "<%= t('group.specify_name') %>", "");
}

function doRenameGroup(thetisBoxId, group_id)
{
  var thetisBoxEdit = _z("thetisBoxEdit-"+thetisBoxId);
  if (thetisBoxEdit && thetisBoxEdit.value) {
    var val = thetisBoxEdit.value;
    ThetisBox.remove(thetisBoxId);

    var thetisBoxProgress = prog("TOP-RIGHT");

    var addParams = [];
    addParams.push("id="+group_id);
    addParams.push("thetisBoxEdit="+encodeURIComponent(val));
    addParams.push("authenticity_token=<%= form_authenticity_token %>");

    new Ajax.Updater(
        "a_groupTree:"+group_id,
        "<%= url_for(:controller => 'groups', :action => 'rename') %>",
        {
          method:"post",
          parameters:addParams.join("&"),
          evalScripts:true,
          onComplete:function(request) {
            thetisBoxProgress.remove();
          }
        }
      );
  }
}

function onRenameGroupClicked(pos)
{
  var group_id = ThetisBox.getSelectedTreeNodeId("groupTree");
  if (!group_id) {
    msg("<%= t('group.select') %>");
    return;
  }

  if (group_id == "0") {
    msg("<%= t('group.root_group_restricted') %>");
    return;
  }

  ThetisBox.openTree("groupTree", group_id, true);

  var thetisBox = new ThetisBox;
  var name = trim(restoreHTML(_z("groupTree:"+group_id+"_name").innerHTML).replace("/", ""));
  thetisBox.show((pos.x)+","+(pos.y+25), "", "INPUT", "doRenameGroup("+thetisBox.id+", '"+group_id+"')", "<%= t('group.specify_name') %>", name);
}

function onDeleteGroupClicked()
{
  var group_id = ThetisBox.getSelectedTreeNodeId("groupTree");
  if (!group_id) {
    msg("<%= t('group.select') %>");
    return;
  }

  if (group_id == "0") {
    msg("<%= t('group.root_group_restricted') %>");
    return;
  }

  ThetisBox.openTree("groupTree", group_id, true);

  var name = trim(_z("groupTree:"+group_id+"_name").innerHTML.replace("/", ""));
  confm("<div style='padding-bottom:10px;'><%= t('paren.square.left') %>"+name+"<%= t('group.delete_info1') %></div><div style='padding-bottom:10px;'><%= t('group.delete_info2') %></div><%= t('msg.confirm_sure') %>", "doDelete("+group_id+")");
}

function doDelete(group_id)
{
  var addParams = [];
  addParams.push("id="+group_id);
  addParams.push(Form.serialize(document.form_group_tree));
  addParams.push("authenticity_token=<%= form_authenticity_token %>");

  var thetisBox = prog("TOP-RIGHT");

  new Ajax.Updater(
      "base_groupTree:"+group_id,
      "<%= url_for(:controller => 'groups', :action => 'destroy') %>",
      {
        method:"post",
        parameters:addParams.join("&"),
        evalScripts:true,
        onComplete:function(request) {
          thetisBox.remove();
          removeElem(_z("base_groupTree:"+group_id));
          _z(ThetisBox.getSelKeeperId("groupTree")).value = "";
        }
      }
    );
}

function onMoveGroupClicked()
{
  var group_id = ThetisBox.getSelectedTreeNodeId("groupTree");
  if (!group_id) {
    msg("<%= t('group.select') %>");
    return;
  }

  if (group_id == "0") {
    msg("<%= t('group.root_group_restricted') %>");
    return;
  }

  ThetisBox.openTree("groupTree", group_id, true);

  var thetisBox = new ThetisBox;
  thetisBox.show("CENTER", "", "TREE", "doMoveGroup("+thetisBox.id+", '"+group_id+"')", "<%= t('group.select_dest')%>", "");
  thetisBox.setTree("<%= url_for(:controller => 'groups', :action => 'ajax_get_tree') %>?id="+group_id, "0");
}

function doMoveGroup(thetisBoxId, group_id)
{
  var thetisBox = ThetisBox.getInstance(thetisBoxId);
  if (thetisBox) {
    var treeNodeId = thetisBox.getSelectedTreeNodeId();
    if (treeNodeId) {
      ThetisBox.remove(thetisBoxId);

      var addParams = [];
      addParams.push("id="+group_id);
      addParams.push("tree_node_id="+treeNodeId);

      prog("TOP-RIGHT");
      var frm = createPostForm("<%= url_for(:controller => 'groups', :action => 'move') %>", addParams);
      frm.submit();
    }
  }
}

function doGetUsers(group_id)
{
  var addParams = [];
  addParams.push("id="+group_id);

  doUpdateView("get", "<%= url_for(:controller => 'groups', :action => 'get_users') %>", addParams);
}

function doGetGroupsOrder(group_id)
{
  var addParams = [];
  addParams.push("id="+group_id);

  doUpdateView("get", "<%= url_for(:controller => 'groups', :action => 'get_groups_order') %>", addParams);
}

function doGetOfficialTitles(group_id)
{
  var addParams = [];
  addParams.push("id="+group_id);

  doUpdateView("get", "<%= url_for(:controller => 'groups', :action => 'get_official_titles') %>", addParams);
}

function doGetWorkflows(group_id)
{
  var addParams = [];
  addParams.push("id="+group_id);

  doUpdateView("get", "<%= url_for(:controller => 'groups', :action => 'get_workflows') %>", addParams);
}

function doGetMaps(group_id)
{
  var addParams = [];
  addParams.push("id="+group_id);

  doUpdateView("get", "<%= url_for(:controller => 'groups', :action => 'get_map') %>", addParams);
}

function selectGroup(group_id)
{
  var select_opt = _z("select_opt");

  if (select_opt == null) {
    doGetUsers(group_id);
  } else {
    switch (_z("select_opt").value)
    {
      case "user": doGetUsers(group_id); break;
      case "groups_order": doGetGroupsOrder(group_id); break;
      case "official_title": doGetOfficialTitles(group_id); break;
      case "workflow": doGetWorkflows(group_id); break;
      case "office_map": doGetMaps(group_id); break;
    }
  }
}

function changeOption(val)
{
  var group_id = ThetisBox.getSelectedTreeNodeId("groupTree");
  if (!group_id) {
    return false;
  }

  switch (val) {
    case "user": doGetUsers(group_id); break;
    case "groups_order": doGetGroupsOrder(group_id); break;
    case "official_title": doGetOfficialTitles(group_id); break;
    case "workflow": doGetWorkflows(group_id); break;
    case "office_map": doGetMaps(group_id); break;
  }
}

onGroupTreeNodeClicked = function(groupId)
{
  selectFolder(groupId);
  var selNodeId = ThetisBox.getSelectedTreeNodeId("groupTree");
  if (selNodeId == groupId) {
    ThetisBox.toggleTree("groupTree", groupId);
  }
  ThetisBox.selectTree("groupTree", groupId);
}

</script>
